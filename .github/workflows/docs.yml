name: Generate and Deploy Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install Senzing dependencies
      run: |
        # Note: In a real deployment, you would need to install Senzing
        # For now, we'll generate docs without building examples that require it
        echo "Senzing installation would go here"

    - name: Check code formatting
      run: cargo fmt -- --check

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: |
        # Skip tests that require Senzing installation for now
        echo "Tests would run here with proper Senzing setup"

    - name: Generate documentation
      run: |
        # Generate docs with all features and private items
        cargo doc --no-deps --all-features --document-private-items

        # Create a simple index.html that redirects to the main crate docs
        cat > target/doc/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <title>Senzing Rust SDK Documentation</title>
            <meta http-equiv="refresh" content="0; url=sz_rust_sdk/index.html">
        </head>
        <body>
            <p>Redirecting to <a href="sz_rust_sdk/index.html">Senzing Rust SDK documentation</a>...</p>
        </body>
        </html>
        EOF

    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4

    - name: Upload Pages artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: target/doc

  deploy-docs:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4